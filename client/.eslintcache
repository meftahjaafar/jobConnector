[{"D:\\jobConnector\\client\\src\\App.js":"1","D:\\jobConnector\\client\\src\\actions\\types.js":"2","D:\\jobConnector\\client\\src\\actions\\profile.js":"3","D:\\jobConnector\\client\\src\\components\\dashboard\\Dashboard.js":"4","D:\\jobConnector\\client\\src\\components\\routing\\PrivateRoute.js":"5","D:\\jobConnector\\client\\src\\reducers\\index.js":"6","D:\\jobConnector\\client\\src\\components\\layout\\Navbar.js":"7","D:\\jobConnector\\client\\src\\components\\layout\\Landing.js":"8","D:\\jobConnector\\client\\src\\components\\layout\\Spinner.js":"9","D:\\jobConnector\\client\\src\\store.js":"10","D:\\jobConnector\\client\\src\\actions\\auth.js":"11","D:\\jobConnector\\client\\src\\actions\\alert.js":"12","D:\\jobConnector\\client\\src\\reducers\\auth.js":"13","D:\\jobConnector\\client\\src\\reducers\\profile.js":"14","D:\\jobConnector\\client\\src\\utils\\setAuthToken.js":"15","D:\\jobConnector\\client\\src\\components\\auth\\Register.js":"16","D:\\jobConnector\\client\\src\\components\\profile-forms\\CreateProfile.js":"17","D:\\jobConnector\\client\\src\\components\\dashboard\\DashboardActions.js":"18","D:\\jobConnector\\client\\src\\components\\profile-forms\\EditProfile.js":"19","D:\\jobConnector\\client\\src\\components\\profile-forms\\AddExperience.js":"20","D:\\jobConnector\\client\\src\\components\\profile-forms\\AddEducation.js":"21","D:\\jobConnector\\client\\src\\components\\dashboard\\Experience.js":"22","D:\\jobConnector\\client\\src\\components\\dashboard\\Education.js":"23","D:\\jobConnector\\client\\src\\index.js":"24","D:\\jobConnector\\client\\src\\components\\auth\\Login.js":"25","D:\\jobConnector\\client\\src\\components\\profile\\Profile.js":"26","D:\\jobConnector\\client\\src\\components\\profile\\ProfileGithub.js":"27","D:\\jobConnector\\client\\src\\components\\profile\\ProfileExperience.js":"28","D:\\jobConnector\\client\\src\\components\\profiles\\ProfileItem.js":"29","D:\\jobConnector\\client\\src\\components\\profiles\\Profiles.js":"30","D:\\jobConnector\\client\\src\\components\\profile\\ProfileTop.js":"31","D:\\jobConnector\\client\\src\\components\\profile\\ProfileEducation.js":"32","D:\\jobConnector\\client\\src\\components\\profile\\ProfileAbout.js":"33","D:\\jobConnector\\client\\src\\reducers\\post.js":"34","D:\\jobConnector\\client\\src\\reducers\\alert.js":"35","D:\\jobConnector\\client\\src\\components\\posts\\PostItem.js":"36","D:\\jobConnector\\client\\src\\actions\\post.js":"37","D:\\jobConnector\\client\\src\\components\\posts\\Posts.js":"38","D:\\jobConnector\\client\\src\\components\\posts\\PostForm.js":"39","D:\\jobConnector\\client\\src\\components\\post\\CommentForm.js":"40","D:\\jobConnector\\client\\src\\components\\post\\Post.js":"41","D:\\jobConnector\\client\\src\\reducers\\company.js":"42","D:\\jobConnector\\client\\src\\components\\dashboard\\DashboardHr.js":"43","D:\\jobConnector\\client\\src\\actions\\company.js":"44","D:\\jobConnector\\client\\src\\components\\profile-forms\\AddCompany.js":"45","D:\\jobConnector\\client\\src\\reducers\\job.js":"46","D:\\jobConnector\\client\\src\\actions\\job.js":"47","D:\\jobConnector\\client\\src\\components\\profile-forms\\AddJob.js":"48","D:\\jobConnector\\client\\src\\components\\jobs\\Jobs.js":"49","D:\\jobConnector\\client\\src\\components\\jobs\\JobItem.js":"50","D:\\jobConnector\\client\\src\\components\\job\\Job.js":"51","D:\\jobConnector\\client\\src\\components\\post\\CommentItem.js":"52","D:\\jobConnector\\client\\src\\components\\job\\JobDescription.js":"53","D:\\jobConnector\\client\\src\\components\\job\\JobInfo.js":"54","D:\\jobConnector\\client\\src\\components\\companies\\CompanyItem.js":"55","D:\\jobConnector\\client\\src\\components\\companies\\Companies.js":"56"},{"size":3829,"mtime":1607069523498,"results":"57","hashOfConfig":"58"},{"size":1701,"mtime":1607020172544,"results":"59","hashOfConfig":"58"},{"size":5382,"mtime":1606861425446,"results":"60","hashOfConfig":"58"},{"size":2212,"mtime":1607010541052,"results":"61","hashOfConfig":"58"},{"size":660,"mtime":1606572894221,"results":"62","hashOfConfig":"58"},{"size":335,"mtime":1607018486284,"results":"63","hashOfConfig":"58"},{"size":6803,"mtime":1607078302611,"results":"64","hashOfConfig":"58"},{"size":1649,"mtime":1606862094308,"results":"65","hashOfConfig":"58"},{"size":260,"mtime":1606842898924,"results":"66","hashOfConfig":"58"},{"size":399,"mtime":1606431557997,"results":"67","hashOfConfig":"58"},{"size":2158,"mtime":1606607423585,"results":"68","hashOfConfig":"58"},{"size":353,"mtime":1606680834400,"results":"69","hashOfConfig":"58"},{"size":1140,"mtime":1606839966382,"results":"70","hashOfConfig":"58"},{"size":1257,"mtime":1606881985766,"results":"71","hashOfConfig":"58"},{"size":337,"mtime":1606508989937,"results":"72","hashOfConfig":"58"},{"size":5277,"mtime":1606508977331,"results":"73","hashOfConfig":"58"},{"size":12292,"mtime":1606681946610,"results":"74","hashOfConfig":"58"},{"size":706,"mtime":1606770829484,"results":"75","hashOfConfig":"58"},{"size":13580,"mtime":1607003805886,"results":"76","hashOfConfig":"58"},{"size":6589,"mtime":1606703965166,"results":"77","hashOfConfig":"58"},{"size":6424,"mtime":1606703965166,"results":"78","hashOfConfig":"58"},{"size":2683,"mtime":1606843534772,"results":"79","hashOfConfig":"58"},{"size":2460,"mtime":1606770835739,"results":"80","hashOfConfig":"58"},{"size":213,"mtime":1606431557996,"results":"81","hashOfConfig":"58"},{"size":3309,"mtime":1606508980912,"results":"82","hashOfConfig":"58"},{"size":3732,"mtime":1607069514425,"results":"83","hashOfConfig":"58"},{"size":1716,"mtime":1606882884112,"results":"84","hashOfConfig":"58"},{"size":741,"mtime":1606872086669,"results":"85","hashOfConfig":"58"},{"size":1766,"mtime":1606857376733,"results":"86","hashOfConfig":"58"},{"size":8233,"mtime":1606944667397,"results":"87","hashOfConfig":"58"},{"size":1977,"mtime":1606880433871,"results":"88","hashOfConfig":"58"},{"size":744,"mtime":1606872156674,"results":"89","hashOfConfig":"58"},{"size":859,"mtime":1606876963772,"results":"90","hashOfConfig":"58"},{"size":1830,"mtime":1606932083200,"results":"91","hashOfConfig":"58"},{"size":389,"mtime":1606431557996,"results":"92","hashOfConfig":"58"},{"size":2586,"mtime":1606944692312,"results":"93","hashOfConfig":"58"},{"size":3469,"mtime":1606944699855,"results":"94","hashOfConfig":"58"},{"size":2877,"mtime":1606943192913,"results":"95","hashOfConfig":"58"},{"size":1098,"mtime":1606941355908,"results":"96","hashOfConfig":"58"},{"size":1136,"mtime":1606945224937,"results":"97","hashOfConfig":"58"},{"size":1463,"mtime":1607069500273,"results":"98","hashOfConfig":"58"},{"size":1003,"mtime":1606999662393,"results":"99","hashOfConfig":"58"},{"size":971,"mtime":1607028858168,"results":"100","hashOfConfig":"58"},{"size":1687,"mtime":1606998809263,"results":"101","hashOfConfig":"58"},{"size":5692,"mtime":1607010792790,"results":"102","hashOfConfig":"58"},{"size":1013,"mtime":1607069490647,"results":"103","hashOfConfig":"58"},{"size":2317,"mtime":1607074048260,"results":"104","hashOfConfig":"58"},{"size":6954,"mtime":1607032679520,"results":"105","hashOfConfig":"58"},{"size":8047,"mtime":1607042974557,"results":"106","hashOfConfig":"58"},{"size":1802,"mtime":1607043229601,"results":"107","hashOfConfig":"58"},{"size":7249,"mtime":1607077040743,"results":"108","hashOfConfig":"58"},{"size":1362,"mtime":1606943847394,"results":"109","hashOfConfig":"58"},{"size":0,"mtime":1607075511162,"results":"110","hashOfConfig":"58"},{"size":3077,"mtime":1607076557749,"results":"111","hashOfConfig":"58"},{"size":1850,"mtime":1607080441424,"results":"112","hashOfConfig":"58"},{"size":8189,"mtime":1607080435105,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"1dxeb44",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"116"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"116"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"116"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"116"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"116"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\jobConnector\\client\\src\\App.js",[],["237","238"],"D:\\jobConnector\\client\\src\\actions\\types.js",[],"D:\\jobConnector\\client\\src\\actions\\profile.js",[],"D:\\jobConnector\\client\\src\\components\\dashboard\\Dashboard.js",[],"D:\\jobConnector\\client\\src\\components\\routing\\PrivateRoute.js",[],"D:\\jobConnector\\client\\src\\reducers\\index.js",[],"D:\\jobConnector\\client\\src\\components\\layout\\Navbar.js",["239"],"D:\\jobConnector\\client\\src\\components\\layout\\Landing.js",[],"D:\\jobConnector\\client\\src\\components\\layout\\Spinner.js",[],"D:\\jobConnector\\client\\src\\store.js",[],["240","241"],"D:\\jobConnector\\client\\src\\actions\\auth.js",[],["242","243"],"D:\\jobConnector\\client\\src\\actions\\alert.js",[],"D:\\jobConnector\\client\\src\\reducers\\auth.js",["244"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case CLEAR_PROFILE:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\jobConnector\\client\\src\\reducers\\profile.js",["245"],"import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_PROFILES,\r\n  NO_REPOS,\r\n  GET_REPOS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n        error: {},\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n        profile: null,\r\n        profiles:[]\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false,\r\n        repos:[]\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false,\r\n      };\r\n    case NO_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: [],\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        repos: [],\r\n        loading: false,\r\n        profile: null,\r\n        profiles:[]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\jobConnector\\client\\src\\utils\\setAuthToken.js",[],"D:\\jobConnector\\client\\src\\components\\auth\\Register.js",[],"D:\\jobConnector\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"D:\\jobConnector\\client\\src\\components\\dashboard\\DashboardActions.js",[],"D:\\jobConnector\\client\\src\\components\\profile-forms\\EditProfile.js",["246"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Alert from \"../layout/Alert\";\r\n\r\n\r\nconst initialState = {\r\n  company: \"\",\r\n  website: \"\",\r\n  location: \"\",\r\n  status: \"\",\r\n  skills: \"\",\r\n  githubusername: \"\",\r\n  bio: \"\",\r\n  twitter: \"\",\r\n  facebook: \"\",\r\n  linkedin: \"\",\r\n  youtube: \"\",\r\n  instagram: \"\",\r\n};\r\n\r\nconst EditProfile = ({\r\n  createProfile,\r\n  profile: { profile, loading },\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  \r\n      setFormData({\r\n        company: loading || !profile.company ? \"\" : profile.company,\r\n        website: loading || !profile.website ? \"\" : profile.website,\r\n        location: loading || !profile.location ? \"\" : profile.location,\r\n        status: loading || !profile.status ? \"\" : profile.status,\r\n        skills: loading || !profile.skills ? \"\" : profile.skills.join(\",\"),\r\n        githubusername:\r\n          loading || !profile.githubusername ? \"\" : profile.githubusername,\r\n        bio: loading || !profile.bio ? \"\" : profile.bio,\r\n        twitter: loading || !profile.twitter ? \"\" : profile.twitter,\r\n        facebook: loading || !profile.facebook ? \"\" : profile.facebook,\r\n        linkedin: loading || !profile.linkedin ? \"\" : profile.linkedin,\r\n        youtube: loading || !profile.youtube ? \"\" : profile.youtube,\r\n        instagram: loading || !profile.instagram ? \"\" : profile.instagram,\r\n      });\r\n\r\n  }, [loading, getCurrentProfile]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"page-content bg-white\">\r\n        <div\r\n          className=\"dez-bnr-inr overlay-black-dark\"\r\n          style={{ background: \"url(images/banner/banner1.JPG)\" }}\r\n        >\r\n          <div className=\"container\">\r\n            <div className=\"dez-bnr-inr-entry\">\r\n              <h1 className=\"text-white\">Update Profile</h1>\r\n              <div className=\"breadcrumb-row\">\r\n                <ul className=\"list-inline\">\r\n                  <li>\r\n                    <Link to=\"/dashboard\">Dashboard</Link>\r\n                  </li>\r\n                  <li>Update Pofile</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"content-block\">\r\n          <div className=\"section-full bg-white submit-resume content-inner-2\">\r\n            <div className=\"container\">\r\n              <h1 className=\"large text-primary\">Update Your Profile</h1>\r\n              <p className=\"text-black font-20\">\r\n                <i className=\"fa fa-user\" /> Let's get some information to make\r\n                your profile stand out\r\n              </p>\r\n              <small>* = required field</small>\r\n              <form autoComplete=\"off\" onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label>Professional title*</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"status\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Status*\"\r\n                    value={status}\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                  <small class=\"form-text\">\r\n                    Give us an idea of where you are at in your career\r\n                  </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Your Company</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"company\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Your Company\"\r\n                    value={company}\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                  <small class=\"form-text\">\r\n                    Could be your own company or one you work for\r\n                  </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Your Website</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"website\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Website\"\r\n                    value={website}\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                  <small class=\"form-text\">\r\n                    Could be your own or a company website\r\n                  </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Location</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"location\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Location, Region\"\r\n                    value={location}\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                  <small class=\"form-text\">\r\n                    City & Region suggested (eg. Tunis, TN)\r\n                  </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Skills*</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"skills\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"* Skills\"\r\n                    value={skills}\r\n                    onChange={(e) => onChange(e)}\r\n                  />\r\n                  <small class=\"form-text\">\r\n                    Please use comma separated values (eg.\r\n                    HTML,CSS,JavaScript,PHP)\r\n                  </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Github Username</label>\r\n                  <div className=\"from-text\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"githubusername\"\r\n                      palceholder=\"Github Username\"\r\n                      value={githubusername}\r\n                      onChange={(e) => onChange(e)}\r\n                    />\r\n                    <small class=\"form-text\">\r\n                      If you want your latest repos and a Github link, include\r\n                      your username\r\n                    </small>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Resume Content</label>\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    name=\"bio\"\r\n                    placeholder=\"A short bio about yourself\"\r\n                    value={bio}\r\n                    onChange={(e) => onChange(e)}\r\n                  ></textarea>\r\n                  <small class=\"form-text\">\r\n                    Tell us a little about yourself\r\n                  </small>\r\n                </div>\r\n                <div className=\"my-2\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-light\"\r\n                    onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n                  >\r\n                    Add Social Network Links\r\n                  </button>\r\n                  <span>Optional</span>\r\n                </div>\r\n                {displaySocialInputs && (\r\n                  <Fragment>\r\n                    <div className=\"panel panel-default\">\r\n                      <div className=\"panel-body\">\r\n                        <div className=\"input-group\">\r\n                          <span className=\"input-group-addon\" id=\"basic-addon1\">\r\n                            <i\r\n                              className=\"fa fa-twitter fa-2x\"\r\n                              style={{ color: \"#38a1f3\" }}\r\n                              aria-hidden=\"true\"\r\n                            ></i>\r\n                          </span>\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"twitter\"\r\n                            value={twitter}\r\n                            onChange={(e) => onChange(e)}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Twitter URL\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                          <span className=\"input-group-addon\" id=\"basic-addon1\">\r\n                            <i\r\n                              className=\"fa fa-youtube fa-2x\"\r\n                              style={{ color: \"#c4302b\" }}\r\n                              aria-hidden=\"true\"\r\n                            ></i>\r\n                          </span>\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"youtube\"\r\n                            value={youtube}\r\n                            onChange={(e) => onChange(e)}\r\n                            placeholder=\"YouTube URL\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                          <span className=\"input-group-addon\" id=\"basic-addon1\">\r\n                            <i\r\n                              className=\"fa fa-linkedin fa-2x\"\r\n                              style={{ color: \"#0077b5\" }}\r\n                              aria-hidden=\"true\"\r\n                            ></i>\r\n                          </span>\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"linkedin\"\r\n                            value={linkedin}\r\n                            onChange={(e) => onChange(e)}\r\n                            placeholder=\"Linkedin URL\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                          <span className=\"input-group-addon\" id=\"basic-addon1\">\r\n                            <i\r\n                              className=\"fa fa-instagram fa-2x\"\r\n                              aria-hidden=\"true\"\r\n                              style={{ color: \"#3f729b\" }}\r\n                            ></i>\r\n                          </span>\r\n                          <input\r\n                            placeholder=\"Instagram URL\"\r\n                            name=\"instagram\"\r\n                            value={instagram}\r\n                            onChange={(e) => onChange(e)}\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                          <span className=\"input-group-addon\" id=\"basic-addon1\">\r\n                            <i\r\n                              className=\"fa fa-facebook fa-2x\"\r\n                              style={{ color: \"#3b5998\" }}\r\n                              aria-hidden=\"true\"\r\n                            ></i>\r\n                          </span>\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"facebook\"\r\n                            value={facebook}\r\n                            onChange={(e) => onChange(e)}\r\n                            placeholder=\"Facebook URL\"\r\n                            className=\"form-control\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Fragment>\r\n                )}\r\n                <Alert />\r\n                <div className=\"extra-nav\">\r\n                  <div className=\"extra-cell\">\r\n                    <button type=\"submit\" className=\"site-button\">\r\n                      <i class=\"fa fa-paper-plane\"></i> Submit\r\n                    </button>\r\n                    <Link to=\"/dashboard\">\r\n                    <button type=\"button\" className=\"site-button\">\r\n                      <i class=\"fa fa-arrow-circle-left\"></i> Go Back\r\n                    </button>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","D:\\jobConnector\\client\\src\\components\\profile-forms\\AddExperience.js",[],"D:\\jobConnector\\client\\src\\components\\profile-forms\\AddEducation.js",[],"D:\\jobConnector\\client\\src\\components\\dashboard\\Experience.js",[],"D:\\jobConnector\\client\\src\\components\\dashboard\\Education.js",[],"D:\\jobConnector\\client\\src\\index.js",[],"D:\\jobConnector\\client\\src\\components\\auth\\Login.js",[],"D:\\jobConnector\\client\\src\\components\\profile\\Profile.js",["247"],"D:\\jobConnector\\client\\src\\components\\profile\\ProfileGithub.js",[],"D:\\jobConnector\\client\\src\\components\\profile\\ProfileExperience.js",[],"D:\\jobConnector\\client\\src\\components\\profiles\\ProfileItem.js",["248"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport avatar from \"./avatar.png\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst ProfileItem = ({ profile }) => {\r\n  return (\r\n    <li>\r\n      <Link to={`/profile/user/${profile && profile.user ? profile.user._id : \"notfound\"}`}>\r\n        <div className=\"d-flex m-b30\">\r\n          <div className=\"job-post-company\">\r\n            <span>\r\n              <img\r\n                src={profile && profile.user ? profile.user.avatar : { avatar }}\r\n              />\r\n            </span>\r\n          </div>\r\n          <div className=\"job-post-info\">\r\n            <h4>{profile && profile.user ? profile.user.name : \" \"}</h4>\r\n            <ul>\r\n              <li>\r\n                <i className=\"fa fa-map-marker\"></i>{\" \"}\r\n                {profile.location && <span>{profile.location}</span>}\r\n              </li>\r\n              <li>\r\n                <i className=\"fa fa-usd\"></i> {profile.status}{\" \"}\r\n                {profile.company && <span> at {profile.company}</span>}\r\n              </li>\r\n              <li>\r\n                <i className=\"fa fa-clock-o\"></i> Member Since{\" \"}\r\n                <Moment format=\"YYYY/MM\">{profile.date}</Moment>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex\">\r\n          <div className=\"job-time mr-auto\">\r\n            {profile.skills.slice(0, 4).map((skill, index) => (\r\n              <span key={index}>{skill}</span>\r\n            ))}\r\n          </div>\r\n\r\n        </div>\r\n        <span className=\"post-like fa fa-heart-o\"></span>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileItem;\r\n","D:\\jobConnector\\client\\src\\components\\profiles\\Profiles.js",["249"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ProfileItem from \"./ProfileItem\";\r\nimport { getProfiles } from \"../../actions/profile\";\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n//   useEffect(() => {\r\n//     getProfiles();\r\n//   }, [getProfiles]);\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const handleChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n   useEffect(() => {\r\n    getProfiles();\r\n    const results = profiles.filter((person) =>\r\n      person.user.name.toLowerCase().includes(searchTerm)\r\n    );\r\n    setSearchResults(results);\r\n  }, [getProfiles, searchTerm]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className=\"page-wraper\">\r\n          <div className=\"page-content bg-white\">\r\n            <div className=\"content-block\">\r\n              <div className=\"section-full bg-white browse-job content-inner-2\">\r\n                <div className=\"container\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-xl-9 col-lg-8\">\r\n                      <div className=\"m-b30\">\r\n                        <h1 className=\"large text-primary\">Profiles</h1>\r\n                        <p className=\"lead\">\r\n                          <i className=\"fa fa-connectdevelop\" /> Browse and\r\n                          connect with Job Board's users\r\n                        </p>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Search freelancer services\"\r\n                          value={searchTerm}\r\n                          onChange={handleChange}\r\n                        />\r\n                      </div>\r\n                      <ul className=\"post-job-bx\">\r\n                        {profiles.length > 0 ? (\r\n                          searchResults.map((profile) => (\r\n                            <ProfileItem key={profile._id} profile={profile} />\r\n                          ))\r\n                        ) : (\r\n                          <h4>No profiles found...</h4>\r\n                        )}\r\n                      </ul>\r\n                    </div>\r\n\r\n                    <div className=\"col-xl-3 col-lg-4\">\r\n                      <div className=\"sticky-top\">\r\n                        <div className=\"clearfix m-b30\">\r\n                          <h5 className=\"widget-title font-weight-700 text-uppercase\">\r\n                            Keywords\r\n                          </h5>\r\n                          <div className=\"\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Search\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"clearfix m-b10\">\r\n                          <div className=\"clearfix m-b30\">\r\n                            <h5 className=\"widget-title font-weight-700 text-uppercase\">\r\n                              Job type\r\n                            </h5>\r\n                            <div className=\"row\">\r\n                              <div className=\"col-lg-6 col-md-6 col-sm-6 col-6\">\r\n                                <div className=\"product-brand\">\r\n                                  <div className=\"custom-control custom-checkbox\">\r\n                                    <input\r\n                                      type=\"checkbox\"\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"check1\"\r\n                                      name=\"example1\"\r\n                                    />\r\n                                    <label\r\n                                      className=\"custom-control-label\"\r\n                                      for=\"check1\"\r\n                                    >\r\n                                      Part Time\r\n                                    </label>\r\n                                  </div>\r\n                                  <div className=\"custom-control custom-checkbox\">\r\n                                    <input\r\n                                      type=\"checkbox\"\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"check2\"\r\n                                      name=\"example1\"\r\n                                    />\r\n                                    <label\r\n                                      className=\"custom-control-label\"\r\n                                      for=\"check2\"\r\n                                    >\r\n                                      Full Time\r\n                                    </label>\r\n                                  </div>\r\n                                  <div className=\"custom-control custom-checkbox\">\r\n                                    <input\r\n                                      type=\"checkbox\"\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"check3\"\r\n                                      name=\"example1\"\r\n                                    />\r\n                                    <label\r\n                                      className=\"custom-control-label\"\r\n                                      for=\"check3\"\r\n                                    >\r\n                                      Internship\r\n                                    </label>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"col-lg-6 col-md-6 col-sm-6 col-6\">\r\n                                <div className=\"product-brand\">\r\n                                  <div className=\"custom-control custom-checkbox\">\r\n                                    <input\r\n                                      type=\"checkbox\"\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"check6\"\r\n                                      name=\"example1\"\r\n                                    />\r\n                                    <label\r\n                                      className=\"custom-control-label\"\r\n                                      for=\"check6\"\r\n                                    >\r\n                                      Freelance\r\n                                    </label>\r\n                                  </div>\r\n                                  <div className=\"custom-control custom-checkbox\">\r\n                                    <input\r\n                                      type=\"checkbox\"\r\n                                      className=\"custom-control-input\"\r\n                                      id=\"check7\"\r\n                                      name=\"example1\"\r\n                                    />\r\n                                    <label\r\n                                      className=\"custom-control-label\"\r\n                                      for=\"check7\"\r\n                                    >\r\n                                      Temporary\r\n                                    </label>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <button className=\"scroltop fa fa-chevron-up\"></button>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","D:\\jobConnector\\client\\src\\components\\profile\\ProfileTop.js",[],"D:\\jobConnector\\client\\src\\components\\profile\\ProfileEducation.js",[],"D:\\jobConnector\\client\\src\\components\\profile\\ProfileAbout.js",[],"D:\\jobConnector\\client\\src\\reducers\\post.js",["250"],"D:\\jobConnector\\client\\src\\reducers\\alert.js",["251"],"D:\\jobConnector\\client\\src\\components\\posts\\PostItem.js",["252"],"import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions,\r\n}) => (\r\n  <li className=\"post bg-white p-1 my-1\">\r\n    <div>\r\n      <Link to={`/profile/user/${user}`}>\r\n        <img className=\"round-img\" src={avatar} alt=\"avatar\" />\r\n        <h4 className=\"text-primary\">{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className=\"my-1\">{text}</p>\r\n      <p className=\"post-date\">\r\n        Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n      </p>\r\n\r\n      {showActions && (\r\n        <div className=\"input-group\">\r\n          <div className=\"extra-nav\">\r\n            <button\r\n              onClick={() => addLike(_id)}\r\n              type=\"button\"\r\n              className=\"btn btn-light\"\r\n            >\r\n              <i className=\"fa fa-thumbs-up\" />{\" \"}\r\n              <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n            </button>\r\n            <button\r\n              onClick={() => removeLike(_id)}\r\n              type=\"button\"\r\n              className=\"btn btn-light\"\r\n            >\r\n              <i className=\"fa fa-thumbs-down\" />\r\n            </button>\r\n            <Link to={`/posts/post/${_id}`} className=\"btn btn-primary\">\r\n              Discussion{\" \"}\r\n              {comments.length > 0 && (\r\n                <span className=\"comment-count\">{comments.length}</span>\r\n              )}\r\n            </Link>\r\n            {!auth.loading && user === auth.user._id && (\r\n              <button\r\n                onClick={() => deletePost(_id)}\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n              >\r\n                <i className=\"fa fa-times\" />\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  </li>\r\n);\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n  showActions: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n","D:\\jobConnector\\client\\src\\actions\\post.js",[],"D:\\jobConnector\\client\\src\\components\\posts\\Posts.js",["253"],"import React, { Fragment, useEffect } from \"react\";\r\nimport posts from \"./posts.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport PostItem from \"./PostItem\";\r\nimport PostForm from \"./PostForm\";\r\nimport { getPosts } from \"../../actions/post\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n  const [searchResults, setSearchResults] = React.useState([]);\r\n  const handleChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n    const results = posts.filter((post) =>\r\n      post.text.toLowerCase().includes(searchTerm)\r\n    );\r\n    setSearchResults(results);\r\n  }, [getPosts, searchTerm, posts]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <div className=\"m-b30\">\r\n                <h1 className=\"large text-primary\">Posts</h1>\r\n                <p className=\"lead\">\r\n                  <i className=\"fa fa-connectdevelop\" />\r\n                  Welcome to the Job Board Community\r\n                </p>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Search Posts\"\r\n                  value={searchTerm}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <PostForm />\r\n              <ul className=\"posts\">\r\n                {posts.length > 0 ? (\r\n                  searchResults.map((post) => (\r\n                    <PostItem key={post._id} post={post} />\r\n                  ))\r\n                ) : (\r\n                  <h4>No posts found...</h4>\r\n                )}\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"col-xl-3 col-lg-4\">\r\n              <div className=\"sticky-top\">\r\n                <div className=\"clearfix m-b30\">\r\n                  <h5 className=\"widget-title font-weight-700 text-uppercase\">\r\n                    Browse Contacts\r\n                  </h5>\r\n                  <div className=\"\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Search Contacts\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"clearfix m-b10\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","D:\\jobConnector\\client\\src\\components\\posts\\PostForm.js",[],"D:\\jobConnector\\client\\src\\components\\post\\CommentForm.js",[],"D:\\jobConnector\\client\\src\\components\\post\\Post.js",["254"],"D:\\jobConnector\\client\\src\\reducers\\company.js",["255"],"D:\\jobConnector\\client\\src\\components\\dashboard\\DashboardHr.js",[],"D:\\jobConnector\\client\\src\\actions\\company.js",["256"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    ADD_COMPANY,\r\n    COMPANY_ERROR,\r\n    GET_COMPANY,\r\n    GET_COMPANIES,\r\n    UPDATE_COMPANY\r\n} from './types';\r\n\r\n// Get companies\r\nexport const getCompanies = () => async dispatch => {\r\n    try {\r\n      const res = await axios.get('/api/company');\r\n  \r\n      dispatch({\r\n        type: GET_COMPANIES,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: COMPANY_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  };\r\n\r\n// Get company\r\nexport const getCompany = id => async dispatch => {\r\n    try {\r\n      const res = await axios.get(`/api/company/${id}`);\r\n  \r\n      dispatch({\r\n        type: GET_COMPANY,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: COMPANY_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  };\r\n\r\n// Add  || edit company\r\nexport const addCompany = (formData, history, edit = false) => async dispatch => {\r\n    try {\r\n      const res = await axios.post('/api/company', formData);\r\n  \r\n      dispatch({\r\n        type: ADD_COMPANY,\r\n        payload: res.data\r\n      });\r\n      dispatch(\r\n        setAlert(\r\n          edit ? \"Company Profile Updated with success\" : \"Company Profile Created with success\",\r\n          \"success\"\r\n        )\r\n      );\r\n  \r\n      if (!edit) {\r\n        history.push(\"/dashboard\");\r\n      }\r\n    } catch (err) {\r\n      dispatch({\r\n        type: COMPANY_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  };\r\n\r\n","D:\\jobConnector\\client\\src\\components\\profile-forms\\AddCompany.js",[],"D:\\jobConnector\\client\\src\\reducers\\job.js",["257"],"D:\\jobConnector\\client\\src\\actions\\job.js",["258","259","260"],"D:\\jobConnector\\client\\src\\components\\profile-forms\\AddJob.js",[],"D:\\jobConnector\\client\\src\\components\\jobs\\Jobs.js",[],"D:\\jobConnector\\client\\src\\components\\jobs\\JobItem.js",["261"],"D:\\jobConnector\\client\\src\\components\\job\\Job.js",["262"],"D:\\jobConnector\\client\\src\\components\\post\\CommentItem.js",[],"D:\\jobConnector\\client\\src\\components\\job\\JobDescription.js",[],"D:\\jobConnector\\client\\src\\components\\job\\JobInfo.js",[],"D:\\jobConnector\\client\\src\\components\\companies\\CompanyItem.js",["263","264"],"D:\\jobConnector\\client\\src\\components\\companies\\Companies.js",[],{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":95,"column":9,"nodeType":"271","messageId":"272","endLine":95,"endColumn":16},{"ruleId":"265","replacedBy":"273"},{"ruleId":"267","replacedBy":"274"},{"ruleId":"265","replacedBy":"275"},{"ruleId":"267","replacedBy":"276"},{"ruleId":"277","severity":1,"message":"278","line":19,"column":1,"nodeType":"279","endLine":56,"endColumn":2},{"ruleId":"277","severity":1,"message":"278","line":19,"column":1,"nodeType":"279","endLine":68,"endColumn":2},{"ruleId":"280","severity":1,"message":"281","line":52,"column":6,"nodeType":"282","endLine":52,"endColumn":34,"suggestions":"283"},{"ruleId":"269","severity":1,"message":"284","line":2,"column":8,"nodeType":"271","messageId":"272","endLine":2,"endColumn":15},{"ruleId":"285","severity":1,"message":"286","line":14,"column":15,"nodeType":"287","endLine":16,"endColumn":17},{"ruleId":"280","severity":1,"message":"288","line":24,"column":6,"nodeType":"282","endLine":24,"endColumn":31,"suggestions":"289"},{"ruleId":"277","severity":1,"message":"278","line":19,"column":3,"nodeType":"279","endLine":81,"endColumn":4},{"ruleId":"277","severity":1,"message":"278","line":5,"column":1,"nodeType":"279","endLine":15,"endColumn":2},{"ruleId":"269","severity":1,"message":"290","line":1,"column":17,"nodeType":"271","messageId":"272","endLine":1,"endColumn":25},{"ruleId":"269","severity":1,"message":"291","line":2,"column":8,"nodeType":"271","messageId":"272","endLine":2,"endColumn":13},{"ruleId":"269","severity":1,"message":"291","line":2,"column":8,"nodeType":"271","messageId":"272","endLine":2,"endColumn":13},{"ruleId":"277","severity":1,"message":"278","line":16,"column":3,"nodeType":"279","endLine":47,"endColumn":4},{"ruleId":"269","severity":1,"message":"292","line":8,"column":5,"nodeType":"271","messageId":"272","endLine":8,"endColumn":19},{"ruleId":"277","severity":1,"message":"278","line":19,"column":1,"nodeType":"279","endLine":59,"endColumn":2},{"ruleId":"269","severity":1,"message":"293","line":8,"column":3,"nodeType":"271","messageId":"272","endLine":8,"endColumn":13},{"ruleId":"269","severity":1,"message":"294","line":10,"column":3,"nodeType":"271","messageId":"272","endLine":10,"endColumn":13},{"ruleId":"269","severity":1,"message":"295","line":11,"column":3,"nodeType":"271","messageId":"272","endLine":11,"endColumn":12},{"ruleId":"296","severity":1,"message":"297","line":15,"column":15,"nodeType":"287","endLine":18,"endColumn":17},{"ruleId":"269","severity":1,"message":"298","line":8,"column":8,"nodeType":"271","messageId":"272","endLine":8,"endColumn":12},{"ruleId":"269","severity":1,"message":"299","line":6,"column":8,"nodeType":"271","messageId":"272","endLine":6,"endColumn":15},{"ruleId":"296","severity":1,"message":"297","line":16,"column":15,"nodeType":"287","endLine":19,"endColumn":17},"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"no-unused-vars","'hrLinks' is assigned a value but never used.","Identifier","unusedVar",["300"],["301"],["300"],["301"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.facebook', 'profile.githubusername', 'profile.instagram', 'profile.linkedin', 'profile.location', 'profile.skills', 'profile.status', 'profile.twitter', 'profile.website', and 'profile.youtube'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["302"],"'profile' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'profiles'. Either include it or remove the dependency array.",["303"],"'Fragment' is defined but never used.","'posts' is defined but never used.","'UPDATE_COMPANY' is defined but never used.","'UPDATE_JOB' is defined but never used.","'DELETE_JOB' is defined but never used.","'CLEAR_JOB' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'auth' is defined but never used.","'company' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.twitter, profile.facebook, profile.linkedin, profile.youtube, profile.instagram]",{"range":"308","text":"309"},"Update the dependencies array to be: [getProfiles, profiles, searchTerm]",{"range":"310","text":"311"},[1758,1786],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.twitter, profile.facebook, profile.linkedin, profile.youtube, profile.instagram]",[817,842],"[getProfiles, profiles, searchTerm]"]